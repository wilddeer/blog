---
description: 'Полифилл для «position: sticky»'
image: cover.png
layout: layouts/postWrap
langLink: 'stickyfill'
tags:
    - archive
---

<div class="stickyfill-post-content">
  <style>
  <%- include('stickyfill-demo.css') %>
  </style>

  <section style="height: 120em;">
    <div class="sticky-1 sticky align-center">
      <h1 class="article-title">
        <a href="https://github.com/wilddeer/stickyfill">Stickyfill</a><br>
        <small class="tagline">Полифилл для <code class="code is-inverse">position:&nbsp;sticky</code></small>
      </h1>

      <div class="notice is-inverse block is-mt is-mb font-size is-smaller">
        <%- include('/svg/history-solid.svg') %> <strong>Устаревшая фигня!</strong><br>Полифилл хорошо поработал, пока браузеры внедряли поддержку <code class="code is-inverse">position:&nbsp;sticky</code>. Сейчас стики можно смело использовать без полифилла, все современные браузеры <a href="https://caniuse.com/?search=position%3Asticky">поддерживают&nbsp;их</a>.
      </div>
    </div>

    <p class="sticky sticky-1-2" style="text-align: center; opacity: 0.3; margin-bottom: 60em; top: 8em; ">
      <span class="scroll-me">
        <%- include('/svg/chevron-down-solid.svg') %>
      </span>
    </p>
  </section>

  <section style="height: 60em;">
    <p class="sticky-2 sticky" style="top: 3em; font-size: 1.2em; margin-top: 2em;">
      Стика — это такой блок, который прилипает к краю экрана, когда доскролливаешь до него. А когда доезжает до конца родительского блока — уезжает вместе с ним. Вот прям как этот параграф.
    </p>
  </section>

  <section style="height: 100em;">
    <div class="sticky-3 sticky" style="top: 3em; margin-bottom: 2.7em;">
      <p>
        Код очень простой:
      </p>

      <pre><code>.sticky {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
}</code></pre>

    </div>

    <p class="sticky-4 sticky" style="top: 16em; margin-top: 40em; margin-bottom: 0;">
      <small class="small"><code class="code is-inverse">top</code> меняет отступ стики от края окна. Еще можно указать <code class="code is-inverse">margin-bottom</code>, чтобы стика останавливалась чуть раньше, чем обычно.</small>
    </p>
  </section>

  <section style="min-height: 160em;">
    <div class="sticky-5 sticky" style="top: 3em; margin-top: 30em; font-size: 1.2em; margin-bottom: 5em;">
      <p>
        Проблема в том, что на данный момент стики <a href="http://caniuse.com/#feat=css-sticky">поддерживаются</a> только в Safari на Маках и на айОси.
      </p>
    </div>

    <div class="sticky-6 sticky" style="top: 8em; margin-top: 50em; font-size: 1.2em;">
      <p>
        Поэтому я написал <a href="https://github.com/wilddeer/stickyfill">Stickyfill</a>. Он эмулирует стики там, где они не поддерживаются нативно.
      </p>
    </div>
  </section>

  <section style="min-height: 90em;">
    <div class="sticky-7 sticky" style="top: 5em; margin-top: 10em;">
      <h2 class="font-size is-heading-3">Что умеет:</h2>

      <ul class="list">
        <li class="list__item">Работает со стиками, прилипающими к верхнему краю</li>
        <li class="list__item"><del class="del">Работает c ячейками таблицы</del> Отключил, пока Фаерфокс <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=975644">не реализует это нативно</a></li>
        <li class="list__item">Работает в IE9+</li>
        <li class="list__item">Отключается в старых браузерах и в браузерах с нативной поддержкой стик</li>
        <li class="list__item">Эмулирует нативное поведение стик (там, где умеет)</li>
        <li class="list__item">Учитывает <a href="http://wilddeer.github.io/stickyfill/test/">кучу разных кейсов</a></li>
      </ul>
    </div>
  </section>

  <section style="min-height: 80em;">
    <div class="sticky-8 sticky" style="top: 5em; margin-top: 5em;">
      <h2 class="font-size is-heading-3">Что не умеет:</h2>

      <ul class="list">
        <li class="list__item">Не умеет левые, правые, нижние и комбинированные стики</li>
        <li class="list__item">Не «стыкует» табличные стики</li>
        <li class="list__item">Не работает во внутренних блоках со скроллом</li>
        <li class="list__item">Не парсит CSS (включается ручками)</li>
      </ul>
    </div>
  </section>

  <section style="min-height: 160em;">
    <p class="sticky-9 sticky" style="top: 5em; margin-top: 50em; font-size: 1.2em; text-align: center;">
      <a href="https://github.com/wilddeer/stickyfill" class="big-fucking-button">
        <%- include('/svg/github-alt-brands.svg') %>
        Забрать с ГитХаба
      </a>
    </p>
  </section>


  <div class="notice is-with-big-icon is-inverse font-size is-smaller" style="margin-top: 30em;">
    <%- include('/svg/heart-regular.svg') %>За четыре дня погружения в ад блоковых моделей браузеров я узнал, чем отличаются <code class="code is-inverse">window.pageYOffset</code>, <code class="code is-inverse">document.documentElement.scrollTop</code>, <code class="code is-inverse">window.scrollY</code> и <code class="code is-inverse">document.body.scrollTop</code>, в чем расхождения <code class="code is-inverse">offsetWidth</code> у блока с <code class="code is-inverse">box-sizing: border-box</code> в разных браузерах, какая разница между <code class="code is-inverse">element.offsetWidth</code> и <code class="code is-inverse">node.getBoundingClientRect().width</code>, в чем разница между <code class="code is-inverse">getComputedStyle(element)</code> и реальными значениями, как посчитать ширину вьюпорта без ширины скролла и как ошибки округления любят накопиться в самый неподходящий момент.
  </div>
</div>

<script src="/js/jquery-3.5.1.slim.min.js"></script>
<script src="/js/stickyfill.min.js"></script>
<script>
<%- include('stickyfill-demo.js') %>
</script>
